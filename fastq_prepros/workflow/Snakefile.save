configfile: "config/config.yaml"

# Paths
raw_dir = config["raw_dir"]
fastq_dir = config["fastq_dir"]
index_dir = config["index_dir"]
bam_dir = config["bam_dir"]
counts_dir = config["counts_dir"]
project_curls_path = config["project_curls_path"]
metadata_path = config["metadata_path"]

# Load metadata and project CURLs
import pandas as pd
project_curls = pd.read_csv(project_curls_path)
metadata = pd.read_csv(metadata_path)

# Define rules
rule all:
    input:
        # Final outputs: BAM files and count matrices
        expand(f"{bam_dir}/{{project}}/{{sample}}.bam", project=metadata["project"], sample=metadata["sample_id"]),
        expand(f"{counts_dir}/{{project}}/{{sample}}_matrix.txt", project=metadata["project"], sample=metadata["sample_id"])

rule download_project:
    input:
        curl_table=project_curls_path
    output:
        directory=lambda wildcards: f"{raw_dir}/{wildcards.project}"
    params:
        curl=lambda wildcards: project_curls[project_curls["project"] == wildcards.project]["curl"].iloc[0]
    script:
        "workflow/scripts/download_project.py"

rule filter_and_preprocess_fastqs:
    input:
        raw_dir=lambda wildcards: f"{raw_dir}/{wildcards.project}"
    output:
        r1=f"{fastq_dir}/{{project}}/{{sample}}/R1.fastq.gz",
        r2=f"{fastq_dir}/{{project}}/{{sample}}/R2.fastq.gz"
    params:
        sample=lambda wildcards: wildcards.sample
    script:
        "workflow/scripts/filter_and_preprocess_fastqs.py"

rule generate_index:
    input:
        genome_fasta=config["genome_fasta"],
        gtf=config["gtf"],
        whitelist=config["whitelist"]
    output:
        directory=index_dir
    shell:
        """
        bash workflow/scripts/generate_index.sh {input.genome_fasta} {input.gtf} {input.whitelist} {output}
        """

rule map_reads:
    input:
        r1=f"{fastq_dir}/{{project}}/{{sample}}/R1.fastq.gz",
        r2=f"{fastq_dir}/{{project}}/{{sample}}/R2.fastq.gz",
        index_dir=index_dir
    output:
        bam=f"{bam_dir}/{{project}}/{{sample}}.bam"
    threads: 8
    shell:
        """
        bash workflow/scripts/map_reads.sh {input.r1} {input.r2} {input.index_dir} {output.bam} {threads}
        """

rule generate_matrix:
    input:
        bam=f"{bam_dir}/{{project}}/{{sample}}.bam",
        index_dir=index_dir
    output:
        matrix=f"{counts_dir}/{{project}}/{{sample}}_matrix.txt"
    shell:
        """
        bash workflow/scripts/matrix_counts.sh {input.bam} {input.index_dir} {output.matrix}
        """
